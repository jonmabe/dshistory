#summary A quick how-to guide for using dsHistory
#labels Featured,Phase-Implementation

dsHistory was designed to be extremely easy to use. All that is really required for one to implement dsHistory into their own project is some moderate JavaScript skills and a desire to improve accessibility throughout their site. To get started, follow the instructions below.

===Step 1===

First, you should make a roadmap of where it will make sense in your application to stack in the back button support. While this may initially seem like the easiest part, screwing this part up will make the rest of the work you put into this pretty much worthless.

===Step 2===

Once you have your roadmap, you'll need to include either the compressed or uncompressed version of dsHistory on the page. While an initialization function does exist, it's only there for legacy compatibility and will be deprecated in a future version.

Additionally, you may want to set the {{{deferProcessing}}} property of the dsHistory object to true. It's set to false by default. When set to true, in IE, the window hash is changed in an anonymous deferred function instead of in the original function that is called. The option is available since IE can sometimes take a very long time to set the hash if there are many elements on the page; while the deferred processing doesn't truly speed things up, it can give the impression of being faster since UI updates can take place in the interim between the executions of the two functions. Anyway, put simply, if IE is being slow when the window hash is being updated, try setting this value to true to see if it seems to perform better.

===Step 3===